hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash$YOY-.1), max(yoyR2(commerceDash)$YOY)+.1) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
yoyR2(commerceDash)
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity")
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip()
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="")
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash$YOY-.1), max(yoyR2(commerceDash)$YOY)+.1)) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash)$YOY-.1), max(yoyR2(commerceDash)$YOY)+.1) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
shiny::runApp()
shiny::runApp()
install.packages("shiny")
install.packages("shiny")
packageVersion(shiny)
packageVersion("shiny")
library(shiny)
devtools::install_github("rstudio/shiny")
library(shiny)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
commerceDash
commerceDash$Conversion
commerceDash$Conversion[1]
commerceDash %>% arrange(desc(FY))
c("previous", "current")
x <- c("previous", "current")
arrange(desc(x))
dplyr::arrange(desc(x))
x
df
x$x <- x
x
x <- data.frame(1:10)
x
x <- data.frame(x =1:10)
x
x <- data.frame(x =1:10, y =2:11)
x
x <- data.frame(x =1:2, y =2:3)
x
x$z <- c("previous", "current")
x
arrange(x, desc(z))
arrange(x, desc(y))
x$z <- c("previous", " current")
arrange(x, desc(z))
dateFilter <- function(df, inputDate=NULL, onlyCY = FALSE){
if (is.null(inputDate)) df
else {
cy <- inputDate
py <- c(cy[1]-365, cy[2]-365)
if (onlyCY == FALSE) {
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
if (length(unique(df$FY)) > 2){
df$Year[between(df$datetime, cy[1], cy[2])] <- "This Year"
df$Year[between(df$datetime, py[1], py[2])] <- "Previous"
df$FY <- df$Year
}
} else {
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]))
}
df
}
}
x$z <- c("previous", " current")df
df
dateFilter(t_commerce, getDates(300))
head(dateFilter(t_commerce, getDates(300)))
head(dateFilter(t_commerce, getDates("FYTD")))
tail(dateFilter(t_commerce, getDates("FYTD")))
tail(dateFilter(t_commerce, getDates(300)))
dateFilter <- function(df, inputDate=NULL, onlyCY = FALSE){
if (is.null(inputDate)) df
else {
cy <- inputDate
py <- c(cy[1]-365, cy[2]-365)
if (onlyCY == FALSE) {
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
if (length(unique(df$FY)) > 2){
df$Year[between(df$datetime, cy[1], cy[2])] <- "Current"
df$Year[between(df$datetime, py[1], py[2])] <- "Previous"
df$FY <- df$Year
}
} else {
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]))
}
df
}
}
tail(dateFilter(t_commerce, getDates(150)))
head(dateFilter(t_commerce, getDates(150)))
x <- dateFilter(t_commerce, getDates(150))
x
FYTD(x, "SSO")
dateFilter <- function(df, inputDate=NULL, onlyCY = FALSE){
if (is.null(inputDate)) df
else {
cy <- inputDate
py <- c(cy[1]-365, cy[2]-365)
if (onlyCY == FALSE) {
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
if (length(unique(df$FY)) > 2){
df$Year[between(df$datetime, cy[1], cy[2])] <- "This YEar"
df$Year[between(df$datetime, py[1], py[2])] <- "Previous"
df$FY <- df$Year
}
} else {
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]))
}
df
}
}
FYTD(x, "SSO")
x <- dateFilter(t_commerce, getDates(150))
x
FYTD(x, "SSO")
head(x)
tail(x)
FYTD(x)
shiny::runApp()
source('C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/helpers.R', echo=TRUE)
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
FYTD(t_experienceType, "Commerce")
x <- dateFilter(t_experienceType, getDates("FYTD"))
head(x)
tail(x)
getDates("FYTD")
FY(max(t_experienceType$datetime))
FY("2015-06-02")
beginFY(Sys.Date())
end.date <- Sys.Date()
current.year <- c(beginFY(end.date), end.date)
last.year <- c(beginFY(end.date-365), current.year[1]-1)
between(max(t_experienceType$datetime), current.year[1], current.year[2])
current.year
FY("2015-06-02")
max(t_experienceType$datetime)
tail(t_experienceType)
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
shiny::runApp()
shiny::runApp()
shiny::runApp()
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash)$YOY-.1), max(yoyR2(commerceDash)$YOY)+.1) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
commerceDash <- FYTD(t_commerce, "BookClubsExperience")
commerceDash
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash)$YOY-.1), max(yoyR2(commerceDash)$YOY)+.1) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
commerceDash <- FYTD(t_commerce, "BookFairsExperience")
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash)$YOY-.1), max(yoyR2(commerceDash)$YOY)+.1) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash)$YOY-.1), max(yoyR2(commerceDash)$YOY)+.1) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
#scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") #+
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash)$YOY-.1), max(yoyR2(commerceDash)$YOY)+.1) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
#ylim(min(yoyR2(commerceDash)$YOY-.1), max(yoyR2(commerceDash)$YOY)+.1) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
yoyR2(commerceDash)
yoyR2(commerceDash)$YOY
yoyR2(commerceDash)$YOY < 0
sum(yoyR2(commerceDash)$YOY < 0)
length(yoyR2(commerceDash))
length(yoyR2(commerceDash$YOY))
nrow(yoyR2(commerceDash$YOY))
ncol(yoyR2(commerceDash$YOY))
length(yoyR2(commerceDash)$YOY)
sum(yoyR2(commerceDash)$YOY == length(yoyR2(commerceDash)$YOY)
sum(yoyR2(commerceDash)$YOY) == length(yoyR2(commerceDash)$YOY)
sum(yoyR2(commerceDash)$YOY < 0) == length(yoyR2(commerceDash)$YOY)
sum(yoyR2(commerceDash)$YOY < 0) == length(yoyR2(commerceDash)$YOY) | 0
sum((yoyR2(commerceDash)$YOY * -1) < 0) == length(yoyR2(commerceDash)$YOY) | 0
sum((yoyR2(commerceDash)$YOY * -1) < 0) == length(yoyR2(commerceDash)$YOY) | sum((yoyR2(commerceDash)$YOY * -1) < 0) == 0
isSame <- function(x){
sum(x < 0) == length(x) | sum(x > =) == length(x)
}
isSame <- function(x){
sum(x < 0) == length(x) | sum(x > =) == length(x)
}
isSame <- function(x){
sum(x < 0) == length(x) | sum(x > =) == length(x)
isSame <- function(x){
sum(x < 0) == length(x) | sum(x > 0) == length(x)
}
isSame(yoyR2(commerceDash)$YOY)
pass
pass()
next
next()
skip()
something +
+
this
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash)$YOY-.1)) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
yoyR2(commerceDash) %>% ggplot(aes(Metrics, YOY, label=Metrics, fill= color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(min(yoyR2(commerceDash)$YOY-.1), 0) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
signR <- function(x){
if (sum(x < 0) == length(x)) return("All Neg")
else if (sum(x > 0) == length(x)) return("All Pos")
else return(FALSE)
}
signR(commerceDash$YOY)
signR(commerceDash$YOY *-1)
commerceDash$YOY * -1
commerceDash$YOY
commerceDash
x
yoyR2(commerceDash)
signR(yoyR2(commerceDash))
signR(yoyR2(commerceDash)$YOY)
signR(yoyR2(commerceDash)$YOY * -1)
yLims <- function(x) {
if (signR(x) == "All Neg"){
ylim(min(x) - .1, 0)
} else if (signR(x) == "All Pos") {
ylim(0, max(x) + .1)
} else {
ylim(min(x) - .1, max(x) + .1)
}
}
yLims(yoyR2(commerceDash)$YOY * -1)
deltaChart <- function(fytdData){
data <- yoyR2(fytdData)
data %>% ggplot(aes(Metrics, YOY, label=Metrics, fill = color)) +
geom_bar(stat="identity", position="identity") +
geom_text(aes(label = paste0(round(YOY * 100, 1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
yLims(YOY) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
}
deltaChart(commerceDash)
deltaChart <- function(fytdData){
data <- yoyR2(fytdData)
data %>% ggplot(aes(Metrics, YOY, label=Metrics, fill = color)) +
geom_bar(stat="identity", position="identity") +
geom_text(aes(label = paste0(round(YOY * 100, 1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
yLims(data$YOY) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
}
deltaChart(commerceDash)
deltaChart(commerceDash)
deltaChart(commerceDash)
shiny::runApp()
shiny::runApp()
gc()
?gc
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp(list(
ui = pageWithSidebar(
headerPanel("Test"),
sidebarPanel(
tags$head(tags$style(type="text/css", "
#loadmessage {
position: fixed;
top: 0px;
left: 0px;
width: 100%;
padding: 5px 0px 5px 0px;
text-align: center;
font-weight: bold;
font-size: 100%;
color: #000000;
background-color: #CCFF66;
z-index: 105;
}
")),
numericInput('n', 'Number of obs', 100),
conditionalPanel(condition="$('html').hasClass('shiny-busy')",
tags$div("Loading...",id="loadmessage"))
),
mainPanel(plotOutput('plot'))
),
server = function(input, output) {
output$plot <- renderPlot({ Sys.sleep(2); hist(runif(input$n)) })
}
))
runApp(list(
ui = pageWithSidebar(
headerPanel("Test"),
sidebarPanel(
tags$head(tags$style(type="text/css", "
#loadmessage {
position: fixed;
top: 0px;
left: 0px;
width: 100%;
padding: 5px 0px 5px 0px;
text-align: center;
font-weight: bold;
font-size: 100%;
color: #000000;
background-color: #CCFF66;
z-index: 105;
}
")),
numericInput('n', 'Number of obs', 100),
conditionalPanel(condition="$('html').hasClass('shiny-busy')",
tags$div("Loading...",id="loadmessage"))
),
mainPanel(plotOutput('plot'))
),
server = function(input, output) {
output$plot <- renderPlot({ Sys.sleep(2); hist(runif(input$n)) })
}
))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shinyBS)
shiny::runApp()
library(shinysky)
shinysky::run.shinysky.example()
devtools::install_github("AnalytixWare/ShinySky")
library(shinysky)
shinysky::run.shinysky.example()
shiny::runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shinysky)
shinysky::run.shinysky.example()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
View(t_content)
View(t_commerce)
head(ltc.content)
head(ltc.commerce)
shiny::runApp()
shiny::runApp()
head(ltc.experienceType)
shiny::runApp()
