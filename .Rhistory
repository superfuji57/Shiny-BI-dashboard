FYTD(t_commerce, "SSO")
yoyR2(FYTD(t_commerce, "SSO"))
yoyR2(FYTD(t_commerce, "BookFairsExperience"))
yoyR2(FYTD(t_commerce, "BookFairsExperience"))
FYTD(t_commerce, "BookFairsExperience")
prettyR(FYTD(t_commerce, "BookFairsExperience"))
prettyR <- function(df){
perMetrics <- c("Conversion", "Engagement", "Engagement WUV/MUV")
totMetrics <- c("Visits", "Revenue", "PageViews", "Orders", "UniqueVisitors")
decMetrics <- c("Page Views per Visit", "Avg Time Spent")
df[, names(df) %in% perMetrics] <- apply(df[, names(df) %in% perMetrics],1, percent)
df[, names(df) %in% totMetrics] <- apply(df[, names(df) %in% totMetrics],1, function(x) f2si2(x, rounding=TRUE))
df
}
prettyR(FYTD(t_commerce, "BookFairsExperience"))
FYTD(t_commerce, "BookFairsExperience")
FYTD(t_commerce, "BookFairsExperience")[2,2]
f2si2(FYTD(t_commerce, "BookFairsExperience")[2,2])
f2si2(FYTD(t_commerce, "BookFairsExperience")[2,2], rounding=TRUE)
f2si2(FYTD(t_commerce, "BookFairsExperience")[,2], rounding=TRUE)
apply(FYTD(t_commerce)$Revenue, 1, function(x) f2si2(x, rounding=TRUE))
apply(FYTD(t_commerce, "BookFairsExperience")$Revenue, 1, function(x) f2si2(x, rounding=TRUE))
FYTD(t_commerce, "BookFairsExperience")
x <- FYTD(t_commerce, "BookFairsExperience")
apply(x[,-1], 1, function(x) f2si2(x, rounding=TRUE))
sapply(x[,-1], 1, function(x) f2si2(x, rounding=TRUE))
sapply(x[,-1], function(x) f2si2(x, rounding=TRUE))
x
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
head(t_content)
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
head(t_content)
runApp("enterpriseDash")
?findInterval
findInterval(10000, 100)
findInterval(10000000, 100)
findInterval(10000000, 1e-24)
findInterval(10000000, 1e+24)
lut <- c(1e-24, 1e-21, 1e-18, 1e-15, 1e-12, 1e-09, 1e-06,
0.001, 1, 1000, 1e+06, 1e+09, 1e+12, 1e+15, 1e+18, 1e+21,
1e+24)
pre <- c("y", "z", "a", "f", "p", "n", "u", "m", "", "k",
"M", "G", "T", "P", "E", "Z", "Y")
ix <- findInterval(number, lut)
findInterval(5120000, lut)
findInterval(5120000, lut)
5120000
5120000 / 11
5120000 / lut[11]
lut[11]
round(5120000 / lut[11])
round(5120000 / lut[11], 2)
round(5120000 / lut[11], 1)
round
f2si2<-function (number,rounding=F, digits=0)
{
lut <- c(1e-24, 1e-21, 1e-18, 1e-15, 1e-12, 1e-09, 1e-06,
0.001, 1, 1000, 1e+06, 1e+09, 1e+12, 1e+15, 1e+18, 1e+21,
1e+24)
pre <- c("y", "z", "a", "f", "p", "n", "u", "m", "", "k",
"M", "G", "T", "P", "E", "Z", "Y")
ix <- findInterval(number, lut)
if (lut[ix]!=1) {
if (rounding==T) {
sistring <- paste(round(number/lut[ix], digits), pre[ix])
}
else {
sistring <- paste(number/lut[ix], pre[ix])
}
}
else {
sistring <- as.character(number)
}
return(sistring)
}
runApp("enterpriseDash")
grepl(“c”, list(letters[1:2]))
grepl("c", list(letters[1:2]))
letters[1:2]
list(letters[1:2])
install.packages("drat")
drat::addRepo("rcourses")
install.packages("nclRadvanced", type="source")
install.packages("drat")
install.packages("drat", repos="http://eddelbuettel.github.io/drat")
devtools::install_github("eddelbuettel/drat")
dratt::addRepo("rcourses")
drat::addRepo("rcourses")
install.pacakges("nclRadvanced", type="source")
install.packages("nclRadvanced", type="source")
library(nclRadvanced)
vignette(package = "nclRadvanced")
vignette(package = "nclRadvanced", "practical2")
library(shiny)
library(shinydash)
?infoBoxOutput
??infoBoxOutput
library(shinydashboard)
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
class(30)
is.numeric(30)
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
data <- list(t_commerce, t_content, t_experienceType)
data
is.null
t_commerce$datetime[length(t_commerce$datetime)]
t_commerce$datetime[length(t_commerce$datetime)] - 30
today()
beginFY(today())
dateFilter <- function(df, dateRange){
cy <- c(dateRange$from, dateRange$to)
py <- c(cy[1]-365, cy[2]-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
dateRange <- function(input) {
if (input$dateRange == "FYTD") {
to <- today()-1
from <- beginFY(to)
} else if (is.numeric(input$dateRange)) {
to <- today()-1
from <- to - input$dateRange
} else if (input$dateRange == "Custom") {
to  <- input$customDateRange[2]
from <- input$customDateRange[1]
}
}
dateRange(30)
dateRange <- function(input$dateRange) {
if (input$dateRange == "FYTD") {
to <- today()-1
from <- beginFY(to)
} else if (is.numeric(input$dateRange)) {
to <- today()-1
from <- to - input$dateRange
} else if (input$dateRange == "Custom") {
to  <- input$customDateRange[2]
from <- input$customDateRange[1]
}
}
x <- NULL
x$from <- '2015-05-01'
x$to <- '2015-05-20'
x
dateFilter(t_experienceType, x)
c(x$from, x$to)
c(x$from, x$to)[1]
c(x$from, x$to)[1] - 365
as.Date(c(x$from, x$to)[1]) - 365
dateFilter <- function(df, dateRange){
cy <- c(dateRange$from, dateRange$to)
py <- c(as.Date(cy[1]-365), as.Date(cy[2]-365))
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
dateFilter(t_experienceType, x)
dateFilter <- function(df, dateRange){
cy <- c(dateRange$from, dateRange$to)
py <- c(as.Date(cy[1])-365, as.Date(cy[2])-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
dateFilter(t_experienceType, x)
dateFilter <- function(df, dateRange){
cy <- c(as.Date(dateRange$from), as.Date(dateRange$to))
py <- c(as.Date(cy[1])-365, as.Date(cy[2])-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
dateFilter(t_experienceType, x)
lapply(data, dateFilter)
dateFilter(t_experienceType, x)
x
lapply(data, function(z) dateFilter(z, x))
dfList <- lapply(data, function(z) dateFilter(z, x))
dfList$t_commerce
dfList
names(data)
dim(data)
dfList <- sapply(data, function(z) dateFilter(z, x))
dfList$t_commerce
names(dfList)
dfList <- sapply(data, function(z) dateFilter(z, x), USE.NAMES = TRUE)
names(dfList)
data <- list(t_commerce=t_commerce, t_content=t_content, t_experienceType=t_experienceType)
dfList <- sapply(data, function(z) dateFilter(z, x), USE.NAMES = TRUE)
names(dfList)
dfList$t_commerce
runApp("enterpriseDash")
runApp("enterpriseDash")
dfList$t_commerce
dfList$t_commerce
runApp("enterpriseDash")
x
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
as.Date('2015-05-01')
as.Date(as.Date('2015-05-01'))
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
Sys.Date()
dateFilter <- function(df, inputDate){
if (inputDate == "FYTD") {
dateRange <- c(beginFY(today()-1), today()-1)
} else if (is.numeric(inputDate)) {
dateRange <- c(today()- 1 - inputDate, today()-1)
} else if (inputDate == "Custom") {
dateRange <- c(input$customDateRange[1], input$customDateRange[2])
}
cy <- c(as.Date(dateRange[1]), as.Date(dateRange[1]))
py <- c(as.Date(cy[1])-365, as.Date(cy[2])-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
dateFilter(t_experienceType, "FYTD")
source('C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/helpers.R', echo=TRUE)
dateFilter(t_experienceType, "FYTD")
dateRange <- c(beginFY(today()-1), today()-1)
dateRange
dateFilter <- function(df, inputDate){
if (inputDate == "FYTD") {
dateRange <- c(beginFY(today()-1), today()-1)
} else if (is.numeric(inputDate)) {
dateRange <- c(today()- 1 - inputDate, today()-1)
} else if (inputDate == "Custom") {
dateRange <- c(input$customDateRange[1], input$customDateRange[2])
}
cy <- c(as.Date(dateRange[1]), as.Date(dateRange[2]))
py <- c(as.Date(cy[1])-365, as.Date(cy[2])-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
dateFilter(t_experienceType, "FYTD")
runApp("enterpriseDash")
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
dataList <- list(t_commerce=t_commerce, t_content=t_content, t_experienceType=t_experienceType)
sapply(dataList, function(x) dateFilter(x, input$dateRange), USE.NAMES = TRUE)
sapply(dataList, function(x) dateFilter(x, "FYTD"), USE.NAMES = TRUE)
dfs <- sapply(dataList, function(x) dateFilter(x, "FYTD"), USE.NAMES = TRUE)
names(dfs)
dfs <- sapply(dataList, function(x) dateFilter(x, 30), USE.NAMES = TRUE)
names(dfs)
dfs
dfs <- sapply(dataList, function(x) dateFilter(x, c('2015-05-01', '2015-05-10')), USE.NAMES = TRUE)
names(dfs)
x <- c('2015-05-01', c('2015-05-10'))
x[1]
x[2]
dfs <- sapply(dataList, function(x) dateFilter(x, x), USE.NAMES = TRUE)
xx <- c('2015-05-01', c('2015-05-10'))
dfs <- sapply(dataList, function(x) dateFilter(x, xx), USE.NAMES = TRUE)
dfs <- sapply(dataList, function(x) dateFilter(x, x), USE.NAMES = TRUE)
x
x
xx
x
dfs <- sapply(dataList, function(x) dateFilter(x, 50), USE.NAMES = TRUE)
dfs
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
is.numeric("30")
"30" > 0
"2015-05-01" > 0
"FT" > 0
as.numeric("2015-05-01") > 0
runApp("enterpriseDash")
e1
runApp("enterpriseDash")
as.numeric("FYTD")
as.numeric("FYTD")
runApp("enterpriseDash")
daz <- c("2015-05-01", "2015-05-20")
length(daz)
length(30)
length("30")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
dateFilter(t_commerce, "FYTD")
dateFilter(t_commerce, c('2015-01-20', '2015-02-20'))
dateFilter <- function(df, inputDate){
if (inputDate == "FYTD") {
dateRange <- c(beginFY(today()-1), today()-1)
} else if (as.numeric(inputDate) > 0 & !is.na(as.numeric(inputDate))) {
dateRange <- c(today()- 1 - as.numeric(inputDate), today()-1)
} else if (length(inputDate) == 2) {
dateRange <- c(inputDate[1], inputDate[2])
}
cy <- c(dateRange[1], dateRange[2])
py <- c(cy[1]-365, cy[2]-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
dateFilter(t_commerce, c('2015-01-20', '2015-02-20'))
dateFilter(t_commerce, c('2015-01-20', '2015-02-20'))
trace(input$customDateRange[1])
trace(dateFilter(t_commerce, c('2015-01-20', '2015-02-20')))
trace()
browser()
df
browser(dateFilter(t_commerce, c('2015-01-20', '2015-02-20')))
dateFilter(t_commerce, c('2015-01-20', '2015-02-20'))
browser()
inputDate
dateFilter <- function(df, inputDate){
if (inputDate == "FYTD") {
dateRange <- c(beginFY(today()-1), today()-1)
} else if (as.numeric(inputDate) > 0 & !is.na(as.numeric(inputDate))) {
dateRange <- c(today()- 1 - as.numeric(inputDate), today()-1)
} else if (length(inputDate) == 2) {
dateRange <- c(inputDate[1], inputDate[2])
}
browser()
cy <- c(dateRange[1], dateRange[2])
py <- c(cy[1]-365, cy[2]-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
dateFilter <- function(df, inputDate){
if (inputDate == "FYTD") {
dateRange <- c(beginFY(today()-1), today()-1)
} else if (as.numeric(inputDate) > 0 & !is.na(as.numeric(inputDate))) {
dateRange <- c(today()- 1 - as.numeric(inputDate), today()-1)
} else if (length(inputDate) == 2) {
dateRange <- c(inputDate[1], inputDate[2])
}
cy <- c(dateRange[1], dateRange[2])
py <- c(cy[1]-365, cy[2]-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
browser(dateFilter(t_commerce, c('2015-01-20', '2015-02-20')))
browser()
inputDate
x
d
dafsdlkfj
5
debug(dateFilter)
dateFilter(t_commerce, c('2015-01-20', '2015-02-20'))
inputDate
length(inputDate)
dateRange
dateRange
dateRange
dateRange
dateRange
dateRange[1]
dateRange[2]
class(dateRange[2])
cy
dateFilter <- function(df, inputDate){
if (inputDate == "FYTD") {
dateRange <- c(beginFY(today()-1), today()-1)
} else if (as.numeric(inputDate) > 0 & !is.na(as.numeric(inputDate))) {
dateRange <- c(today()- 1 - as.numeric(inputDate), today()-1)
} else if (length(inputDate) == 2) {
dateRange <- c(as.Date(inputDate[1]), as.Date(inputDate[2]))
}
cy <- c(dateRange[1], dateRange[2])
py <- c(cy[1]-365, cy[2]-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
debug(dateFilter)
dateFilter(t_commerce, c('2015-01-20', '2015-02-20'))
cy
cy
class(cy)
py
class(py)
head(df)
runApp("enterpriseDash")
dateFilter(t_commerce, c('2015-01-20', '2015-02-20'))
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
dateFilter(t_commerce, c('2015-01-20', '2015-02-20'))
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
devtools::install_github("rstudio/shiny")
library(shiny)
library(mime)
install.packages(mime)
install.packages("mime")
install.packages("mime")
devtools::install_github("rstudio/shiny")
devtools::install_github("yihui/mime")
devtools::install_github("rstudio/shiny")
library(shiny)
runApp("enterpriseDash")
charToDate()
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
getDates <- function(inputDate){
if (length(inputDate) == 2) {
dateRange <- inputDate
} else if (inputDate == "FYTD") {
dateRange <- c(beginFY(today()-1), today()-1)
} else if (as.numeric(inputDate) > 0 & !is.na(as.numeric(inputDate))) {
dateRange <- c(today()- 1 - as.numeric(inputDate), today()-1)
}
}
getDates(30)
getDates <- function(inputDate){
if (length(inputDate) == 2) {
dateRange <- inputDate
} else if (inputDate == "FYTD") {
dateRange <- c(beginFY(today()-1), today()-1)
} else if (as.numeric(inputDate) > 0 & !is.na(as.numeric(inputDate))) {
dateRange <- c(today()- 1 - as.numeric(inputDate), today()-1)
}
dateRange
}
getDates(30)
getDates(50)
getDates(1)
getDates(c('2015-05-01', '2015-05-20'))
class(getDates(c('2015-05-01', '2015-05-20')))
dateFilter2 <- function(df, inputDate){
cy <- inputDate
py <- c(cy[1]-365, cy[2]-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
dateFilter2(t_commerce, getDates(30))
dateFilter2(t_commerce, getDates(c('2015-05-10', '2015-05-11')))
dateFilter2(t_commerce, getDates(c('2015-05-10', '2015-05-15')))
getDates(c('2015-05-10', '2015-05-11'))
getDates(c('2015-05-10', '2015-05-11'))[1]
getDates(c('2015-05-10', '2015-05-11'))[1] - 365
as.Date(getDates(c('2015-05-10', '2015-05-11')))[1] - 365
getDates <- function(inputDate){
if (length(inputDate) == 2) {
dateRange <- inputDate
} else if (inputDate == "FYTD") {
dateRange <- c(beginFY(today()-1), today()-1)
} else if (as.numeric(inputDate) > 0 & !is.na(as.numeric(inputDate))) {
dateRange <- c(today()- 1 - as.numeric(inputDate), today()-1)
}
as.Date(dateRange)
}
dateFilter2 <- function(df, inputDate){
cy <- inputDate
py <- c(cy[1]-365, cy[2]-365)
df <- dplyr::filter(df, between(datetime, cy[1], cy[2]) |
between(datetime, py[1], py[2]))
df
}
dateFilter2(t_commerce, getDates(c('2015-05-10', '2015-05-15')))
dateFilter2(t_commerce, getDates(50))
runApp("enterpriseDash")
runApp("enterpriseDash")
?dropdownMenu
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
