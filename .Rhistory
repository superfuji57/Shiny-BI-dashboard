"Page Views per Visit" = round(sum(pageviews) / sum(visits), 2)) %>%
arrange(FY)
View(FYTD.commerce)
View(FYTD.commerce)
arrange(FYTD.commerce, FY)
arrange(FYTD.commerce, desc(FY))
?sort
fyz <- c("FY14", "FY15", "FY13")
arrange(fyz)
fyz <- data.frame(c("FY14", "FY15", "FY13"))
fyz
fyz <- data.frame(FYS = c("FY14", "FY15", "FY13"))
fyz
arrange(fyz, FYS)
year(current.year[1])
year(current.year[1])+1
year(current.year[1])+1[2]
as.character(year(current.year[1])+1)
as.character(year(current.year[1])+1)[1:2]
as.character(year(current.year[1])+1)[3]
paste0("FY", year(current.year[1])+1[2])
paste0("FY", as.character(year(current.year[1])+1[2]))
paste0("FY", character(year(current.year[1])+1[2]))
year(current.year[1])+1
class(year(current.year[1])+1)
as.character(year(current.year[1])+1)
FY <- function(date){
if (between(date, current.year[1], current.year[2])){
return(factor(paste0("FY", as.character(year(current.year[1])+1))))
} else if (between(date, last.year[1], last.year[2])) {
return(factor(paste0("FY", as.character(year(last.year[1])+1))))
} else return(factor("Year NA"))
}
t_commerce$FY <- sapply(t_commerce$datetime, FY)
View(t_commerce)
tail(t_commerce)
t_commerce$FY <- sapply(t_commerce$datetime, FY)
t_content$FY <- sapply(t_content$datetime, FY)
t_experienceType$FY <- sapply(t_experienceType$datetime, FY)
save(t_experienceType, t_commerce, t_content, file="./enterpriseDash/data/enterprise.Rda")
runApp("enterpriseDash")
View(YOY.commerce)
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
View(FYTD.commerce)
View(FYTD.content)
runApp("enterpriseDash")
View(FYTD.commerce)
pretty(FYTD.commerce)
runApp("enterpriseDash")
runApp("enterpriseDash")
t_commerce$datetime[1]
month(t_commerce$datetime[1])
month(t_commerce$datetime[1], label = TRUE)
month(t_commerce$datetime[1], label = TRUE, abbr = FALSE)
month(t_commerce$datetime[1], abbr = FALSE)
month(t_commerce$datetime[1], label = TRUE, abbr = FALSE)
day(t_commerce$datetime[1], label = TRUE, abbr = FALSE)
day(t_commerce$datetime[1])
t_commerce$datetime[length(t_commerce$datetime)]
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
install.packages("shinyBS")
runApp("enterpriseDash")
library(shinyBS)
shinyBS
?shinyBS
??shinyBS
runApp("enterpriseDash")
devtools::install_github("ebailey78/shinyBS")
runApp("enterpriseDash")
list("bsModal")
library(shinyBS)
runApp("enterpriseDash")
library(shiny)
runApp("enterpriseDash")
?fileReaderData
library(shiny)
?fileReaderData
reactiveFileReader
?reactiveFileReader
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
source('C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/helpers.R', echo=TRUE)
FYTD.commerce <- t_experienceType %>%
filter(name == "Commerce",
between(datetime, last.year[1], last.year[2]) |
between(datetime, current.year[1], current.year[2])) %>%
group_by(FY) %>%
summarize(Revenue = sum(revenue),
Conversion = sum(orders) / sum(visits),
Visits = sum(visits),
PageViews = sum(pageviews),
Orders = sum(orders),
UniqueVisitors = sum(uniquevisitors),
"Page Views per Visit" = round(sum(pageviews) / sum(visits), 2)) %>%
arrange(desc(FY))
FYTD.content <- t_experienceType %>%
filter(name == "Content",
between(datetime, last.year[1], last.year[2]) |
between(datetime, current.year[1], current.year[2])) %>%
group_by(FY) %>%
summarize(Revenue = sum(revenue),
Conversion = sum(orders) / sum(visits),
Visits = sum(visits),
PageViews = sum(pageviews),
Orders = sum(orders),
UniqueVisitors = sum(uniquevisitors),
"Page Views per Visit" = round(sum(pageviews) / sum(visits), 2)) %>%
arrange(desc(FY))
YOY.commerce <- yoyR2(FYTD.commerce)
YOY.content <- yoyR2(FYTD.content)
YOY.commerce$color <- ifelse(YOY.commerce$YOY < 0, "red", "green")
YOY.content$color <- ifelse(YOY.content$YOY < 0, "red", "green")
save(t_experienceType, t_commerce, t_content, FYTD.commerce, FYTD.content, YOY.commerce, YOY.content,
file="./enterpriseDash/data/enterprise.Rda")
runApp("enterprise.Rda")
runApp("enterpriseDash")
runApp("enterpriseDash")
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
runApp("enterpriseDash")
load("./data/enterprise.Rda")
load("./enterpriseDash/data/enterprise.Rda")
runApp("enterpriseDash")
View(YOY.content)
YOY.content %>% ggplot(aes(Metrics, YOY, label=Metrics, fill = color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(-.5, .5) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
YOY.content %>% ggplot(aes(Metrics, YOY, label=Metrics, fill = color)) +
geom_bar(stat = "identity", position="identity") +
geom_text(aes(label = paste0( round(YOY * 100,1), "%"),
hjust = ifelse(YOY >= 0, 0, 1))) +
coord_flip() +
labs(x="", y="") +
ylim(-.5, .5) +
scale_color_fivethirtyeight() +
theme_fivethirtyeight() +
scale_fill_manual(values = c("green" = "chartreuse3", "red" = "firebrick")) +
theme(legend.position = "none",
plot.title = element_text(size=20, lineheight=.8, vjust=1, family = "Garamond"),
axis.text.y=element_text(size = 12, colour="darkblue"))
runApp("enterpriseDash")
wrong <- c(3, 6, 7, 5, 1, 2, 9, 8)
right <- c(4, 10, 2, 6, 1, 5, 9, 3)
length(wrong)
length(right)
library(shiny)
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
View(t_commerce)
FYTD <- function(df, experience, ...){
df %>% filter(name == experience,
between(datetime, last.year[1], last.year[2]) |
between(datetime, current.year[1], current.year[2])) %>%
group_by(FY) %>%
summarize(Revenue = sum(revenue),
Conversion = sum(orders) / sum(visits),
Visits = sum(visits),
PageViews = sum(pageviews),
Orders = sum(orders),
#UniqueVisitors = sum(uniquevisitors),
"Page Views per Visit" = round(sum(pageviews) / sum(visits), 1)) %>%
arrange(desc(FY))
}
FYTD(t_experienceType, "Commerce")
FYTD(t_experienceType, "Content")
unique(t_commerce$name)
FYTD <- function(df, experience, ...){
content.sites <- c("Content", "TeacherContent", "Parents", "Kids")
commerce.sites <- c("Commerce", "TSO CQS", "SSO", "BookFairsExperience", "Classroom Magazines",
"Printables Minibooks", "Teacher Express", "BookClubsExperience")
if (experience %in% commerce.sites) {
df %>% filter(name == experience,
between(datetime, last.year[1], last.year[2]) |
between(datetime, current.year[1], current.year[2])) %>%
group_by(FY) %>%
summarize(Revenue = sum(revenue),
Conversion = sum(orders) / sum(visits),
Visits = sum(visits),
PageViews = sum(pageviews),
Orders = sum(orders),
#UniqueVisitors = sum(uniquevisitors),
"Page Views per Visit" = round(sum(pageviews) / sum(visits), 1)) %>%
arrange(desc(FY))
} else if (experience %in% content.sites) {
df %>% filter(name == experience,
between(datetime, last.year[1], last.year[2]) |
between(datetime, current.year[1], current.year[2])) %>%
group_by(FY) %>%
summarize(#Revenue = sum(revenue),
#Conversion = sum(orders) / sum(visits),
Visits = sum(visits),
PageViews = sum(pageviews),
#Orders = sum(orders),
#UniqueVisitors = sum(uniquevisitors),
"Page Views per Visit" = round(sum(pageviews) / sum(visits), 1),
TimeSpent = round(sum(totaltimespent/60) / sum(visits), 1),
"Engagement WUV/MUV" = round(sum(tail(visitorsweekly,7)) / sum(tail(visitorsmonthly,30)), 3) ) %>%
arrange(desc(FY))
} else return(warning("Invalid experience type"))
}
FYTD(t_commerce, "SSO")
FYTD(t_experienceType, "Commerce")
FYTD(t_experienceType, "Content")
View(t_content)
FYTD(t_experienceType, "Content00")
runApp("enterpriseDash")
runApp("enterpriseDash")
yoyR2 <- function(x) {
df <- arrange(x, desc(FY))
df <- df[,sapply(df, is.numeric)]
df <- data.frame(cbind(apply(df, 2, yoyR)))
names(df) <- "YOY"
df$Metrics <- row.names(df)
df$color <- ifelse(YOY.commerce$YOY < 0, "red", "green")
df
}
yoyR2(FYTD(t_experienceType, "Commerce"))
FYTD(t_experienceType, "Commerce")
x <- FYTD(t_experienceType, "Commerce")
yoyR2(x)
yoyR2(filter(t_experienceType, name="Commerce"))
yoyR2(filter(t_experienceType, name=="Commerce"))
yoyR2 <- function(x) {
df <- arrange(x, desc(FY))
df <- df[,sapply(df, is.numeric)]
df <- data.frame(cbind(apply(df, 2, yoyR)))
names(df) <- "YOY"
df$Metrics <- row.names(df)
#df$color <- ifelse(YOY.commerce$YOY < 0, "red", "green")
df
}
yoyR2(filter(t_experienceType, name=="Commerce"))
yoyR2 <- function(x) {
df <- arrange(x, desc(FY))
df <- df[,sapply(df, is.numeric)]
df <- data.frame(cbind(apply(df, 2, yoyR)))
names(df) <- "YOY"
df$Metrics <- row.names(df)
df$color <- ifelse(df$YOY < 0, "red", "green")
df
}
yoyR2(FYTD(t_experienceType, "Commerce"))
runApp("enterpriseDash")
yoyR2(FYTD(t_experienceType, "Content"))
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
yoyR2(FYTD(t_experienceType, "Content"))
runApp("enterpriseDash")
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
FYTD(t_experienceType, "Commerce")
yoyR2(FYTD(t_experienceType, "Commerce"))
yoyR2(FYTD(t_experienceType, "Content"))
yoyR2(FYTD(t_experienceType, "Commerce"))
FYTD(t_experienceType, "Commerce")
View(t_experienceType)
FYTD <- function(df, experience, ...){
e <- Sys.Date()
current.year <- c(beginFY(end.date), end.date)
last.year <- c(beginFY(end.date-365), current.year[1]-1)
content.sites <- c("Content", "TeacherContent", "Parents", "Kids")
commerce.sites <- c("Commerce", "TSO CQS", "SSO", "BookFairsExperience", "Classroom Magazines",
"Printables Minibooks", "Teacher Express", "BookClubsExperience")
if (experience %in% commerce.sites) {
df %>% filter(name == experience,
between(datetime, last.year[1], last.year[2]) |
between(datetime, current.year[1], current.year[2])) %>%
group_by(FY) %>%
summarize(Revenue = sum(revenue),
Conversion = sum(orders) / sum(visits),
Visits = sum(visits),
PageViews = sum(pageviews),
Orders = sum(orders),
#UniqueVisitors = sum(uniquevisitors),
"Page Views per Visit" = round(sum(pageviews) / sum(visits), 1)) %>%
arrange(desc(FY))
} else if (experience %in% content.sites) {
df %>% filter(name == experience,
between(datetime, last.year[1], last.year[2]) |
between(datetime, current.year[1], current.year[2])) %>%
group_by(FY) %>%
summarize(#Revenue = sum(revenue),
#Conversion = sum(orders) / sum(visits),
Visits = sum(visits),
PageViews = sum(pageviews),
#Orders = sum(orders),
#UniqueVisitors = sum(uniquevisitors),
"Page Views per Visit" = round(sum(pageviews) / sum(visits), 1),
TimeSpent = round(sum(totaltimespent/60) / sum(visits), 1),
"Engagement WUV/MUV" = round(sum(tail(visitorsweekly,7)) / sum(tail(visitorsmonthly,30)), 3) ) %>%
arrange(desc(FY))
} else return(warning("Invalid experience type"))
}
FYTD(t_experienceType, "Commerce")
last.year
last.year
current.year
last.year <- c(beginFY(end.date-365), current.year[1]-365)
last.year
current.year
last.year
last.year <- c(beginFY(end.date-365), current.year[1]-1)
last.year
FYTD <- function(df, experience, ...){
end.date <- today() - 1
current.year <- c(beginFY(end.date), end.date)
last.year <- c(beginFY(end.date-365), end.date-365)
content.sites <- c("Content", "TeacherContent", "Parents", "Kids")
commerce.sites <- c("Commerce", "TSO CQS", "SSO", "BookFairsExperience", "Classroom Magazines",
"Printables Minibooks", "Teacher Express", "BookClubsExperience")
if (experience %in% commerce.sites) {
df %>% filter(name == experience,
between(datetime, last.year[1], last.year[2]) |
between(datetime, current.year[1], current.year[2])) %>%
group_by(FY) %>%
summarize(Revenue = sum(revenue),
Conversion = sum(orders) / sum(visits),
Visits = sum(visits),
PageViews = sum(pageviews),
Orders = sum(orders),
#UniqueVisitors = sum(uniquevisitors),
"Page Views per Visit" = round(sum(pageviews) / sum(visits), 1)) %>%
arrange(desc(FY))
} else if (experience %in% content.sites) {
df %>% filter(name == experience,
between(datetime, last.year[1], last.year[2]) |
between(datetime, current.year[1], current.year[2])) %>%
group_by(FY) %>%
summarize(#Revenue = sum(revenue),
#Conversion = sum(orders) / sum(visits),
Visits = sum(visits),
PageViews = sum(pageviews),
#Orders = sum(orders),
#UniqueVisitors = sum(uniquevisitors),
"Page Views per Visit" = round(sum(pageviews) / sum(visits), 1),
TimeSpent = round(sum(totaltimespent/60) / sum(visits), 1),
"Engagement WUV/MUV" = round(sum(tail(visitorsweekly,7)) / sum(tail(visitorsmonthly,30)), 3) ) %>%
arrange(desc(FY))
} else return(warning("Invalid experience type"))
}
FYTD(t_experienceType, "Commerce")
yoyR2(FYTD(t_experienceType, "Commerce"))
runApp("enterpriseDash")
runApp("enterpriseDash")
View(FYTD.content)
prettyR(FYTD.content)
FYTD.content
prettyR <- function(df){
perMetrics <- c("Conversion", "Engagement", "Engagement WUV/MUV")
totMetrics <- c("Visits", "Revenue", "PageViews", "Orders", "UniqueVisitors")
decMetrics <- c("Page Views per Visit", "Avg Time Spent")
df[, names(df) %in% perMetrics] <- apply(df[, names(df) %in% perMetrics],1, percent)
df[, names(df) %in% totMetrics] <- apply(df[, names(df) %in% totMetrics],1, function(x) f2si2(x, rounding=1))
df
}
prettyR(FYTD.content)
runApp("enterpriseDash")
FYTD(t_commerce, "TSO CQS")
yoyR2(FYTD(t_commerce, "TSO CQS"))
unique(t_commerce$name)
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
library(shiny)
runApp("enterpriseDash")
unique(t_commerce$name)
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
unique(t_commerce$name)
FYTD(t_commerce, "Printables MiniBooks")
unique(t_commerce$name)[5]
FYTD(t_commerce, "Printables MiniBooks")
runApp("enterpriseDash")
FYTD(t_commerce, "TSO CQS")
yoyR2(FYTD(t_commerce, "TSO CQS"))
runApp("enterpriseDash")
yoyR2(FYTD(t_commerce, "Classroom Magazines"))
runApp("enterpriseDash")
yoyR2(FYTD(t_commerce, "Classroom Magazines"))
yoyR2(FYTD(t_commerce, "Classroom Magazines"))
runApp("enterpriseDash")
yoyR2(FYTD(t_commerce, "Classroom Magazines"))$YOY
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
FYTD(t_commerce, "SSO")
yoyR2(FYTD(t_commerce, "SSO"))
yoyR2(FYTD(t_commerce, "BookFairsExperience"))
yoyR2(FYTD(t_commerce, "BookFairsExperience"))
FYTD(t_commerce, "BookFairsExperience")
prettyR(FYTD(t_commerce, "BookFairsExperience"))
prettyR <- function(df){
perMetrics <- c("Conversion", "Engagement", "Engagement WUV/MUV")
totMetrics <- c("Visits", "Revenue", "PageViews", "Orders", "UniqueVisitors")
decMetrics <- c("Page Views per Visit", "Avg Time Spent")
df[, names(df) %in% perMetrics] <- apply(df[, names(df) %in% perMetrics],1, percent)
df[, names(df) %in% totMetrics] <- apply(df[, names(df) %in% totMetrics],1, function(x) f2si2(x, rounding=TRUE))
df
}
prettyR(FYTD(t_commerce, "BookFairsExperience"))
FYTD(t_commerce, "BookFairsExperience")
FYTD(t_commerce, "BookFairsExperience")[2,2]
f2si2(FYTD(t_commerce, "BookFairsExperience")[2,2])
f2si2(FYTD(t_commerce, "BookFairsExperience")[2,2], rounding=TRUE)
f2si2(FYTD(t_commerce, "BookFairsExperience")[,2], rounding=TRUE)
apply(FYTD(t_commerce)$Revenue, 1, function(x) f2si2(x, rounding=TRUE))
apply(FYTD(t_commerce, "BookFairsExperience")$Revenue, 1, function(x) f2si2(x, rounding=TRUE))
FYTD(t_commerce, "BookFairsExperience")
x <- FYTD(t_commerce, "BookFairsExperience")
apply(x[,-1], 1, function(x) f2si2(x, rounding=TRUE))
sapply(x[,-1], 1, function(x) f2si2(x, rounding=TRUE))
sapply(x[,-1], function(x) f2si2(x, rounding=TRUE))
x
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
runApp("enterpriseDash")
head(t_content)
load("C:/Users/andrewon/Shiny-BI-dashboard/enterpriseDash/data/enterprise.Rda")
head(t_content)
runApp("enterpriseDash")
?findInterval
findInterval(10000, 100)
findInterval(10000000, 100)
findInterval(10000000, 1e-24)
findInterval(10000000, 1e+24)
lut <- c(1e-24, 1e-21, 1e-18, 1e-15, 1e-12, 1e-09, 1e-06,
0.001, 1, 1000, 1e+06, 1e+09, 1e+12, 1e+15, 1e+18, 1e+21,
1e+24)
pre <- c("y", "z", "a", "f", "p", "n", "u", "m", "", "k",
"M", "G", "T", "P", "E", "Z", "Y")
ix <- findInterval(number, lut)
findInterval(5120000, lut)
findInterval(5120000, lut)
5120000
5120000 / 11
5120000 / lut[11]
lut[11]
round(5120000 / lut[11])
round(5120000 / lut[11], 2)
round(5120000 / lut[11], 1)
round
f2si2<-function (number,rounding=F, digits=0)
{
lut <- c(1e-24, 1e-21, 1e-18, 1e-15, 1e-12, 1e-09, 1e-06,
0.001, 1, 1000, 1e+06, 1e+09, 1e+12, 1e+15, 1e+18, 1e+21,
1e+24)
pre <- c("y", "z", "a", "f", "p", "n", "u", "m", "", "k",
"M", "G", "T", "P", "E", "Z", "Y")
ix <- findInterval(number, lut)
if (lut[ix]!=1) {
if (rounding==T) {
sistring <- paste(round(number/lut[ix], digits), pre[ix])
}
else {
sistring <- paste(number/lut[ix], pre[ix])
}
}
else {
sistring <- as.character(number)
}
return(sistring)
}
runApp("enterpriseDash")
grepl(“c”, list(letters[1:2]))
grepl("c", list(letters[1:2]))
letters[1:2]
list(letters[1:2])
install.packages("drat")
drat::addRepo("rcourses")
install.packages("nclRadvanced", type="source")
install.packages("drat")
install.packages("drat", repos="http://eddelbuettel.github.io/drat")
devtools::install_github("eddelbuettel/drat")
dratt::addRepo("rcourses")
drat::addRepo("rcourses")
install.pacakges("nclRadvanced", type="source")
install.packages("nclRadvanced", type="source")
library(nclRadvanced)
vignette(package = "nclRadvanced")
vignette(package = "nclRadvanced", "practical2")
